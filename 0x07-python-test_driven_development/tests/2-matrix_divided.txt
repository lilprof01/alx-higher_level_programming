>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> matrix_divided([[1,2], [2, 2]], 2)
[[0.5, 1.0], [1.0, 1.0]]

>>> matrix_divided([[1,2], [2, 2]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1,2], ["a", 2]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix(list of lists) of integers/floats

>>> matrix_divided([[1,2], [2, 2]], "a")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1,2], [2, 2]], -1)
[[-1.0, -2.0], [-2.0, -2.0]]

>>> matrix_divided([[1,2], 2], -1)
Traceback (most recent call last):
TypeError: matrix must be a matrix(list of lists) of integers/floats

>>> matrix_divided([[1,2,3], [1,2,3,4]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

matrix_divided([[1, 2, 3],[4, 5, 6]], 1, 2)
Traceback (most recent call last):
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

>>> matrix_divided([[1, 2, 3]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix(list of lists) of integers/floats

>>> matrix_divided(1, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix(list of lists) of integers/floats
>>>
